"use strict";function isArray(e){return _.isArray(e)}function isObject(e){return e instanceof Object&&!isArray(e)}function isString(e){return _.isString(e)}function ensureValidEnumKeyName(e){if(!e||"string"!=typeof e||!isNaN(parseInt(e)))throw"bad enum key: "+e}function keysFromArray(e){for(var r=[],n=0,t=e.length;t>n;++n){var s=e[n];ensureValidEnumKeyName(s),r.push(e[n])}return r}function keysFromObject(e){var r=[];for(var n in e)e.hasOwnProperty(n)&&(ensureValidEnumKeyName(n),r.push(n));return r}function keysFromString(e){for(var r=e.split(/[,;:\s]+/),n=0,t=r.length;t>n;++n)ensureValidEnumKeyName(r[n]);return r}function getIsFuncName(e){return ensureValidEnumKeyName(e),"is"+_.capitalize(_.camelCase(e))}function buildEnum(e,r,n){for(var t=0,s=e.length;s>t;++t){var i=e[t],a={_id:i,_seq:t};r[i]=a,extendIsFuncsToEnumItem(a,e,n)}}function extendIsFuncsToEnumItem(e,r,n){e.toString=function(){return e._id},e.name=e.toString,r&&n&&(e._kl=r),r&&_.forEach(r,function(r){var n=getIsFuncName(r);e[n]=function(){return r===e._id}}),e.is=function(r){return r===e?!0:null===r||"undefined"==typeof r||r===!1?!1:r===e._seq?!0:r._id?r._id===e._id:"string"==typeof r?r.toUpperCase()===e._id.toUpperCase():!1}}function freeze(e){return Object&&Object.freeze?Object.freeze(e):e}function seal(e){return Object&&Object.seal?Object.seal(e):e}var _=require("lodash"),genEnum=function(e){var r=[];if(arguments.length>1)r=keysFromArray(arguments);else if(isArray(e))r=keysFromArray(e);else if(isObject(e))r=keysFromObject(e);else{if(!isString(e))throw new Error("Argument must be a string or an array of strings.");r=keysFromString(e)}var n={};return buildEnum(r,n,!0),freeze(n)};genEnum["transient"]=function(e){var r=[];if(arguments.length>1)r=keysFromArray(arguments);else if(isArray(e))r=keysFromArray(e);else if(isObject(e))r=keysFromObject(e);else{if(!isString(e))throw new Error("Argument must be a string or an array of strings.");r=keysFromString(e)}var n={};return buildEnum(r,n,!1),freeze(n)},genEnum.lite=genEnum["transient"];var genConst=function(e){var r=[];if(arguments.length>1)r=keysFromArray(arguments);else if(isArray(e))r=keysFromArray(e);else if(isObject(e))r=keysFromObject(e);else{if(!isString(e))throw new Error("Argument must be a string or an array of strings.");r=keysFromString(e)}for(var n={},t=0,s=r.length;s>t;++t){var i=r[t];n[i]=i}return freeze(n)},_genBitmap=function(e){var r=[],n=!1,t=!1;if(arguments.length>1)if("boolean"==typeof arguments[0]){n=arguments[0];var s=[];if(Array.prototype.push.apply(s,arguments),s.shift(),1==s.length)if(e=s[0],isString(e))r=keysFromString(e);else if(isObject(e))t=e,r=keysFromObject(e);else{if(!isArray(e))throw new Error("Argument must be a string or an array of strings.");r=keysFromArray(e)}else r=keysFromArray(s)}else r=keysFromArray(arguments);else if(isArray(e))r=keysFromArray(e);else if(isObject(e))t=e,r=keysFromObject(e);else{if(!isString(e))throw new Error("Argument must be a string or an array of strings.");r=keysFromString(e)}for(var i={},a=0,u=r.length;u>a;++a){var o=r[a];i[o]=t&&"boolean"==typeof t[o]?t[o]:n}return i},genBitmap=function(e){var r=_genBitmap.apply(this,arguments);return seal(r)};genBitmap.immutable=function(e){return freeze(_genBitmap.apply(this,arguments))};var _unJSON=function(e){if(e&&e._id)extendIsFuncsToEnumItem(e,e._kl,!0);else if(isObject(e))for(var r in e)e.hasOwnProperty(r)&&_unJSON(e[r])},unJSON=function(e){return"string"==typeof e&&(e=JSON.parse(e)),_unJSON(e),e};module.exports={"enum":genEnum,"const":genConst,bitmap:genBitmap,unJSON:unJSON};